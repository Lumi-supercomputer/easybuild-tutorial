FROM easybuilders/base:centos7-eb4.2.1
# CPU_ARCH is expected to be defined in the "docker build" command,
# for example: docker build --build-arg CPU_ARCH=haswell
ARG CPU_ARCH
# make sure CPU_ARCH is defined
RUN test -n "${CPU_ARCH}" || (echo "\$CPU_ARCH undefined, use 'docker build --build-arg CPU_ARCH=...'" && exit 1)
LABEL cpu_arch=${CPU_ARCH}
ENV CPU_ARCH=${CPU_ARCH}
# verify provided CPU_ARCH value, should match with what archspec produces
RUN export HOST_CPU_ARCH=$(python3 -c 'import archspec.cpu; print(archspec.cpu.host())') && \
  (test "${CPU_ARCH}" == "$HOST_CPU_ARCH" || (echo "Host CPU arch '${HOST_CPU_ARCH}' doesn't match specified CPU arch '${CPU_ARCH}'!" && exit 1))
# for example: docker build --build-arg CPU_ARCH=haswell
# create /scratch & /easybuild directories
USER root
RUN mkdir /scratch && chown easybuild:easybuild /scratch
RUN mkdir /easybuild && chown easybuild:easybuild /easybuild
USER easybuild
# use /easybuild for everything that should persist in the container (software, modules and sources)
# everything else goes in /scratch, which will be cleaned out
ENV EASYBUILD_PREFIX=/scratch
ENV EASYBUILD_INSTALLPATH=/easybuild
ENV EASYBUILD_SOURCEPATH=/easybuild/sources
# disable output buffering in Python, so we see EasyBuild output as it progresses
ENV PYTHONUNBUFFERED=TRUE
# install software & accompanying modules
RUN eb GCC-9.3.0.eb --robot --trace \
  # clean up everything in /scratch
  && rm -rf /scratch/*
# finalize /easybuild, no changes can be made in /easybuild that persist!
VOLUME /easybuild
# make sure we start in /home/easybuild rather than / when shell in started in container
WORKDIR /home/easybuild
